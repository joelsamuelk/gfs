import type { Transaction as FirestoreTransaction, Firestore } from '@google-cloud/firestore';
import type { Queryable, QuerySnapshot } from './collection';
import type { Reference, SetOpts, Snapshot } from './reference';
import type { GetOpts, Transaction } from './transaction';
export declare class ReadOnlyTransaction implements Transaction {
    readonly firestore: Firestore;
    private readonly logStats;
    private readonly nonAtomicReads;
    /**
     * @deprecated Not supported on ReadonlyTransaction
     */
    get nativeTransaction(): FirestoreTransaction;
    constructor(firestore: Firestore, logStats: boolean);
    /**
     * @deprecated Not supported on ReadOnlyTransaction
     */
    getAtomic<T extends object>(ref: Reference<T>, opts?: GetOpts): Promise<Snapshot<T>>;
    getAtomic<T extends object>(refs: Reference<T>[], opts?: GetOpts): Promise<Snapshot<T>[]>;
    getAtomic<T extends object>(query: Queryable<T>): Promise<QuerySnapshot<T>>;
    getNonAtomic<T extends object>(ref: Reference<T>, opts?: GetOpts): Promise<Snapshot<T>>;
    getNonAtomic<T extends object>(refs: Reference<T>[], opts?: GetOpts): Promise<Snapshot<T>[]>;
    getNonAtomic<T extends object>(query: Queryable<T>): Promise<QuerySnapshot<T>>;
    /**
     * @private
     * @deprecated For internal connector use only
     */
    commit(): Promise<void>;
    create<T extends object>(ref: Reference<T>, data: T, opts?: SetOpts): Promise<T>;
    create<T extends object>(ref: Reference<T>, data: Partial<T>, opts?: SetOpts): Promise<Partial<T>>;
    update<T extends object>(ref: Reference<T>, data: T, opts?: SetOpts): Promise<T>;
    update<T extends object>(ref: Reference<T>, data: Partial<T>, opts?: SetOpts): Promise<Partial<T>>;
    delete<T extends object>(ref: Reference<T>): Promise<void>;
    /**
     * @deprecated Not supported on ReadOnlyTransaction
     */
    addNativeWrite(): never;
    /**
     * Performs write operations only for virtual references. All other write operations
     * are not supported.
     * @private
     * @deprecated For internal connector use only
     */
    mergeWriteInternal<T extends object>(ref: Reference<T>, data: Partial<T> | undefined, editMode: 'create' | 'update'): void;
}
