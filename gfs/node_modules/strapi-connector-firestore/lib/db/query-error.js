"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.QueryError = void 0;
class QueryError extends Error {
    constructor(cause, query) {
        super(`Firestore query failed: ${cause.message}`);
        this.cause = cause;
        this.query = query;
    }
    getQueryInfo() {
        // HACK: Using private API, can break if Firestore internal changes.
        // @ts-expect-error
        const { parentPath, collectionId, limit, offset, fieldFilters, fieldOrders, startAt, endAt } = this.query._queryOptions;
        return {
            parentPath, collectionId, limit, offset, fieldFilters, fieldOrders, startAt, endAt
        };
    }
    describeQuery() {
        return JSON.stringify(this.getQueryInfo(), undefined, 2);
    }
}
exports.QueryError = QueryError;
