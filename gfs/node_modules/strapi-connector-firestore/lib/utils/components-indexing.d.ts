import type { FirestoreConnectorModel } from '../model';
import type { AttributeKey, IndexerFn, StrapiAttribute, StrapiModel } from '../types';
export declare function doesComponentRequireMetadata(attr: StrapiAttribute): boolean;
export declare function updateComponentsMetadata<T extends object>(model: FirestoreConnectorModel<T>, data: T, output?: T): void;
export declare function generateMetadataForComponent<T extends object>(model: FirestoreConnectorModel<T>, parentAlias: AttributeKey<T>, data: T): object | undefined;
export interface AttributeIndexInfo {
    alias: string;
    attr: StrapiAttribute;
    defaultIndexer?: string;
    indexers: {
        [key: string]: IndexerFn;
    };
}
/**
 * Build indexers for all the indexed attributes
 * in a component model.
 */
export declare function buildIndexers<T extends object>(model: StrapiModel<T>): AttributeIndexInfo[] | undefined;
