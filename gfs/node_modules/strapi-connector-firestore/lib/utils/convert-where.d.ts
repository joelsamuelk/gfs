import type { FirestoreFilter, StrapiOrFilter, StrapiWhereFilter } from '../types';
import type { FirestoreConnectorModel } from '../model';
import { ManualFilter } from './manual-filter';
export declare class EmptyQueryError extends Error {
    constructor();
}
/**
 * Convert a Strapi or Firestore query operator to a Firestore operator
 * or a manual function.
 */
export declare function convertWhere(model: FirestoreConnectorModel<any>, { field, operator, value }: StrapiWhereFilter | StrapiOrFilter | FirestoreFilter, mode: 'manualOnly'): ManualFilter | null;
export declare function convertWhere(model: FirestoreConnectorModel<any>, { field, operator, value }: StrapiWhereFilter | StrapiOrFilter | FirestoreFilter, mode: 'nativeOnly'): FirestoreFilter | null;
export declare function convertWhere(model: FirestoreConnectorModel<any>, { field, operator, value }: StrapiWhereFilter | StrapiOrFilter | FirestoreFilter, mode: 'manualOnly' | 'nativeOnly' | 'preferNative'): FirestoreFilter | ManualFilter | null;
