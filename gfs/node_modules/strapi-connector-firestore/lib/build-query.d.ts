import type { Queryable } from './db/collection';
import type { FirestoreConnectorModel } from './model';
import type { Reference } from './db/reference';
export interface QueryArgs<T extends object> {
    model: FirestoreConnectorModel<T>;
    params: any;
    allowSearch?: boolean;
}
export declare function buildQuery<T extends object>(query: Queryable<T>, { model, params, allowSearch }: QueryArgs<T>): Queryable<T> | Reference<T>[];
