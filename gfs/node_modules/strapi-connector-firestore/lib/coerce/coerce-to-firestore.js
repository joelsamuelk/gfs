"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.coerceToFirestore = exports.coerceModelToFirestore = void 0;
const _ = require("lodash");
const field_operation_1 = require("../db/field-operation");
/**
 * Lightweight converter for a root model object. Ensures that the
 * `primaryKey` is not set on the Firestore data.
 */
function coerceModelToFirestore(model, data) {
    const obj = coerceToFirestore(data);
    _.unset(obj, model.primaryKey);
    return obj;
}
exports.coerceModelToFirestore = coerceModelToFirestore;
/**
 * Lightweight converter that converts known custom classes
 * to Firestore-compatible values.
 */
function coerceToFirestore(data) {
    return _.cloneDeepWith(data, value => {
        // Coerce values within FieldOperation
        // and convert to its native counterpart
        if (value instanceof field_operation_1.FieldOperation) {
            return value
                .coerceWith(coerceToFirestore)
                .toFirestoreValue();
        }
        if (value && (typeof value === 'object') && ('toFirestoreValue' in value)) {
            return value.toFirestoreValue();
        }
        return undefined;
    });
}
exports.coerceToFirestore = coerceToFirestore;
